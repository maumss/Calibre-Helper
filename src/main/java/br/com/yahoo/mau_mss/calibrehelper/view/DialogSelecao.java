package br.com.yahoo.mau_mss.calibrehelper.view;

import java.awt.event.ActionListener;
import br.com.yahoo.mau_mss.calibrehelper.controller.SelecaoAction;
import br.com.yahoo.mau_mss.calibrehelper.util.ActionSupport;

/**
 * <p>Title: DialogSelecao.java </p>
 * <p>Description: Seleciona o diretorio de dados </p>
 * <p>Copyright: Copyright (c) 2004</p>
 * @author Mauricio SS
 * @version 1.0
 * @see br.com.autocominformatica.ecfserver.action.arquivo.SelecaoAction
 */
public class DialogSelecao extends javax.swing.JDialog {
  /** A return status code - returned if Cancel button has been pressed */
  public static final int RET_CANCEL = 0;
  /** A return status code - returned if OK button has been pressed */
  public static final int RET_OK = 1;
  private ActionSupport actionSupport = new ActionSupport();
  private static final long serialVersionUID = 1L;
  
  /** 
   * Creates new form DialogSelecao
   * @param parent java.awt.Frame
   * @param modal boolean
   */
  public DialogSelecao(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    //setSize(500, 400);
    setLocationRelativeTo(parent);
  }
  
  /**
   * Adiciona um listener para propagar eventos neste form
   * @param listener ActionListener
   */
  public void addActionListener(ActionListener listener) {
    this.actionSupport.addActionListener(listener);
  }
  
  /**
   * Remove um listener para propagar eventos neste form
   * @param listener ActionListener
   */
  public void removeActionListener(ActionListener listener) {
    this.actionSupport.removeActionListener(listener);
  }
  
  /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
  public int getReturnStatus() {
    return returnStatus;
  }
  
  public String getJFileChooser1() {
    return this.jFileChooser1.getSelectedFile().getPath();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    jFileChooser1 = new javax.swing.JFileChooser();

    setTitle("Selecione do diret\u00f3rio desejado");
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(java.awt.event.WindowEvent evt) {
        closeDialog(evt);
      }
    });

    jFileChooser1.setApproveButtonText("Abrir");
    jFileChooser1.setDialogTitle("Sele\u00e7\u00e3o");
    jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFileChooser1ActionPerformed(evt);
      }
    });

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
    );
    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * Gera o actionCommand "ApproveSelection"
   * @param evt java.awt.event.ActionEvent
   */
  private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
    this.actionSupport.fireActionEvent(evt);
  }//GEN-LAST:event_jFileChooser1ActionPerformed
      
  /** 
   * Closes the dialog 
   * @param evt java.awt.event.WindowEvent
   */
  private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    this.actionSupport.fireActionEvent(new java.awt.event.ActionEvent(evt.getSource(), 
      evt.getID(), SelecaoAction.COMANDO_SAIR));
  }//GEN-LAST:event_closeDialog
  
  public void doClose(int retStatus) {
    returnStatus = retStatus;
    setVisible(false);
    dispose();
  }
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new DialogSelecao(new javax.swing.JFrame(), true).setVisible(true);
      }
    });
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JFileChooser jFileChooser1;
  // End of variables declaration//GEN-END:variables
  
  private int returnStatus = RET_CANCEL;
}
